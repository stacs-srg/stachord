<project>

	<!-- This depends on the Hudson workspace structure. -->
	<property name="hudson-tools-archive-dir" location="../../hudson_tools/lastStable/archive" />
      
	<import file="${hudson-tools-archive-dir}/build-common.xml"/>

	<target name="build" depends="do-init-release, do-compile, do-test, project-jar, release-doc, do-checkstyle, do-findbugs, do-cpd, do-coverage, do-highlight" />

	<target name="build-nightly" depends="do-init-release, do-compile, do-test-nightly" />

	<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->

	<property name="classpath" value="bin:${lib-nds}:${lib-mindterm}:${lib-junit}:${lib-remote_management}" />

	<property name="compile-src-dir"      value="src" />
	<property name="compile-includes"     value="**/*.java" />
	<property name="compile-dest-dir"     value="bin" />

    <property name="checkstyle-check-dir" value="." />
	<property name="cpd-check-dir"        value="." />
	
	<property name="findbugs-src-dir"     value="src/uk/ac/standrews/cs/stachord" />
	<property name="findbugs-check-dir"   value="bin/uk/ac/standrews/cs/stachord" />

	<property name="test-name" value="uk.ac.standrews.cs.stachord.test.CheckInTests" />
	
	<property name="cobertura.dir" value="${hudson-tools-archive-dir}/lib/cobertura" />
	<property name="instrumented.dir" value="cobertura-instrumented" />

	<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->

	<!-- Initialise release directory structure. -->
	<target name="do-init-release">
		<mkdir dir="bin" />
		<mkdir dir="colored" />
		<mkdir dir="doc" />
		<mkdir dir="junit" />
		<mkdir dir="junit-cobertura" />
		<mkdir dir="cobertura-instrumented" />
		<mkdir dir="coverage-report" />
	</target>

	<!-- Run nightly tests. -->
	<target name="do-test-nightly">
		<ant target="do-test">
			<property name="test-name" value="uk.ac.standrews.cs.stachord.test.NightlyTests" />
		</ant>
	</target>
	
	<!-- Generate project jar. -->
	<target name="project-jar">
		<jar jarfile="bin/stachord.jar" basedir="src" includes="uk/**" />
	</target>

	<!-- Generate javadoc. -->
	<target name="release-doc">
		<javadoc
				classpath="${classpath}" sourcepath="src" destdir="doc" packagenames="uk.ac.standrews.cs.stachord.*"
				access="public" linksource="yes" source="1.6" nodeprecated="false" nodeprecatedlist="false"
				noindex="false" nonavbar="false" notree="false" splitindex="false" use="false" author="true" version="true" verbose="true">

			<!-- Link to Java API from generated documentation. -->
			<link href="${doc-java}" />
			
			<link href="${doc-nds}" />
			<link href="${doc-mindterm}" />
		</javadoc>
	</target>
	
	<!-- Coverage report. -->
	<target name="do-coverage">
		
		<path id="cobertura.classpath">
		    <fileset dir="${cobertura.dir}">
		        <include name="cobertura.jar" />
		        <include name="lib/**/*.jar" />
		    </fileset>
		</path>

		<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

		<cobertura-instrument todir="${instrumented.dir}">
		    <ignore regex="org.apache.log4j.*" />
		    <fileset dir="bin">
		        <include name="**/*.class" />
		        <exclude name="**/*Test.class" />
		    </fileset>
		</cobertura-instrument>
		
		<junit fork="yes" failureProperty="test.failed">
			<!--
				Specify the name of the coverage data file to use.
				The value specified below is the default.
			-->
			<sysproperty key="net.sourceforge.cobertura.datafile"
				file="cobertura.ser" />

			<!--
				Note the classpath order: instrumented classes are before the
				original (uninstrumented) classes.  This is important.
			-->
			<classpath location="${instrumented.dir}" />
			<classpath location="bin" />

			<!--
				The instrumented classes reference classes used by the
				Cobertura runtime, so Cobertura and its dependencies
				must be on your classpath.
			-->
			<classpath refid="cobertura.classpath" />

			<classpath location="${lib-nds}" />
			<classpath location="${lib-mindterm}" />
			<classpath location="${lib-junit}" />
			<classpath location="${remote_management}" />

			<formatter type="xml" />
			<test name="${test-name}" todir="junit-cobertura"/>
		</junit>
		
		<cobertura-report format="xml" destdir="coverage-report" srcdir="." />

	</target>
	
</project>
