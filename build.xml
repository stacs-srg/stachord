<project>

	<target name="build" depends="do-init-release, do-compile, do-test, project-jar, release-doc, do-checkstyle, do-findbugs, do-pmd, do-cpd" />

	<target name="build-nightly" depends="do-init-release, do-compile, do-test-nightly" />

	<!-- Initialise release directory structure. -->
	<target name="do-init-release">
		<mkdir dir="bin" />
		<mkdir dir="doc" />
		<mkdir dir="junit" />
	</target>

	<!-- Compile current version. -->
	<target name="do-compile" depends="remove-class-files">
		<javac srcdir="." includes="uk/**" classpath="${classpath}">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>
	
	<!-- Delete any existing .class files to force complete recompilation. -->
	<target name="remove-class-files">
		<delete failonerror="false">
			<fileset dir="." includes="**/*.class"/>
		</delete>
	</target>

	<!-- Run check-in tests. -->
	<target name="do-test">
		<junit fork="yes" clonevm="true" maxmemory="256m" printsummary="no" showoutput="yes" failureproperty="test-failed" errorproperty="test-failed" filtertrace="no">
			<!-- Run tests with assertions enabled. -->
			<jvmarg value="-ea" />
			<formatter type="xml"/>
			<test name="uk.ac.standrews.cs.stachordRMI.test.CheckInTests" todir="junit"/>
			<classpath path="${classpath}"/>
		</junit>
	</target>
	
	<!-- Run nightly tests. -->
	<target name="do-test-nightly">
		<junit fork="yes" clonevm="true" maxmemory="256m" printsummary="no" showoutput="yes" failureproperty="test-failed" errorproperty="test-failed" filtertrace="no">
			<!-- Run tests with assertions enabled. -->
			<jvmarg value="-ea" />
			<formatter type="xml"/>
			<test name="uk.ac.standrews.cs.stachordRMI.test.NightlyTests" todir="junit"/>
			<classpath path="${classpath}"/>
		</junit>
	</target>
	
	<!-- Generate project jar. -->
	<target name="project-jar">
		<jar jarfile="bin/stachordRMI.jar" basedir="." includes="uk/**" />
	</target>

	<!-- Generate javadoc. -->
	<target name="release-doc">
		<javadoc
				classpath="${classpath}" sourcepath="." destdir="doc" packagenames="uk.ac.standrews.cs.stachordRMI.*"
				access="public" linksource="yes" source="1.5" nodeprecated="false" nodeprecatedlist="false"
				noindex="false" nonavbar="false" notree="false" splitindex="false" use="false" author="true" version="true" verbose="true">

			<!-- Link to Java API from generated documentation. -->
			<link href="${doc-java}" />
		</javadoc>
	</target>

	<!-- Run style check. -->
	<target name="do-checkstyle">
		<checkstyle config="checkstyle-config.xml" failOnViolation="false">
			<formatter type="xml" tofile="checkstyle-result.xml" />
			<fileset dir="." includes="**/*.java" />
			<classpath path="${classpath}" />
		</checkstyle>
	</target>
	
	<!-- Run bug scan. -->
	<target name="do-findbugs">

	    <findbugs home="${lib-findbugs-dir}" output="xml:withMessages" outputFile="findbugs.xml" excludeFilter="findbugs-exclude.xml">
	        <auxClasspath path="${classpath}" />
	        <sourcePath path="." />
	        <class location="bin/stachordRMI.jar" />
	    </findbugs>
    </target>
	
	<!-- Run PMD check. -->
	<target name="do-pmd">
	    <pmd rulesetfiles="rulesets/favorites.xml, rulesets/basic.xml, rulesets/controversial.xml, rulesets/naming.xml, rulesets/strings.xml">
	        <formatter type="xml" toFile="pmd.xml"/>
	        <fileset dir=".">
	            <include name="**/*.java"/>
	        </fileset>
	    </pmd>
	</target>
	
	<!-- Run duplicate code check. -->
	<target name="do-cpd">
	    <cpd minimumTokenCount="100" format="xml" outputFile="cpd.xml">
	        <fileset dir=".">
	            <include name="**/*.java"/>
	        </fileset>
	    </cpd>
	</target>
	
	<property name="lib-junit-4.1"         location="/projects/systems/InstallerSoftware/junit4.1/junit-4.1.jar" />
	<property name="lib-checkstyle-dir"    location="/projects/systems/InstallerSoftware/checkstyle-5.1" />
	<property name="lib-findbugs-dir"      location="/projects/systems/InstallerSoftware/findbugs-1.3.9" />
	<property name="lib-pmd-dir"           location="/projects/systems/InstallerSoftware/pmd-4.2.5/lib" />
	<property name="lib-crap4j-dir"        location="/projects/systems/InstallerSoftware/crap4j/lib" />

	<property name="lib-nds"               location="../../nds/lastStable/archive/bin/nds.jar" />
	<property name="lib-remote_management" location="../../remote_management/lastStable/archive/bin/remote_management.jar" />
	<property name="lib-tools"             location="/usr/java/default/lib/tools.jar" />
	<property name="lib-checkstyle"        location="${lib-checkstyle-dir}/checkstyle-all-5.1.jar" />
	<property name="lib-pmd"               location="${lib-pmd-dir}/pmd-4.2.5.jar" />

	<property name="classpath"       value=".:${lib-nds}:lib/mindterm.jar:${lib-junit-4.1}:${lib-remote_management}" />
    <property name="doc-java"        value="http://java.sun.com/j2se/1.5.0/docs/api/" />

	<taskdef resource="checkstyletask.properties" classpath="${lib-checkstyle}"/>

	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
	
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
		<classpath><pathelement location="${lib-pmd}"/><pathelement location="${lib-remote_management}"/></classpath>
	</taskdef>

	<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask">
		<classpath><pathelement location="${lib-pmd}"/></classpath>
	</taskdef>
	
</project>
